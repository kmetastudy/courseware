# Generated by Django 4.1.5 on 2023-10-16 13:40

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='mDemoStudyLogN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('subtype', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('order', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('properties', models.TextField(blank=True, null=True)),
                ('id_student', models.UUIDField(blank=True, null=True)),
                ('id_class', models.UUIDField(blank=True, null=True)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('id_content', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___mDemoStudyLogN',
            },
        ),
        migrations.CreateModel(
            name='mDemoStudyResultN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('subtype', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('order', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('progress', models.IntegerField(default=0)),
                ('point', models.IntegerField(default=0)),
                ('properties', models.TextField(blank=True, null=True)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('id_student', models.UUIDField(blank=True, null=True)),
                ('id_class', models.UUIDField(blank=True, null=True)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('id_content', models.UUIDField(blank=True, null=True)),
                ('id_base_course', models.UUIDField(blank=True, null=True)),
                ('id_ref_course', models.UUIDField(blank=True, null=True)),
                ('id_clinic_course', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___mDemoStudyResultN',
            },
        ),
        migrations.CreateModel(
            name='mLessonFinalResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.CharField(max_length=100)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('lesson_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('try_index', models.IntegerField(default=0)),
                ('wrong_count', models.IntegerField(default=0)),
                ('action_request', models.IntegerField(default=0)),
                ('repeat_count', models.TextField(blank=True, null=True)),
                ('question_results', models.TextField(blank=True, null=True)),
                ('question_answers', models.TextField(blank=True, null=True)),
                ('action_logs', models.TextField(blank=True, null=True)),
                ('total_time', models.IntegerField(default=0)),
                ('total_video_time', models.IntegerField(default=0)),
                ('part_video_time', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mLessonProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('lesson_id', models.UUIDField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('point', models.IntegerField(default=0)),
                ('try_count', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mLessonQuestionResults',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lesson_result_id', models.UUIDField(blank=True, null=True)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('lesson_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('question_id', models.UUIDField(blank=True, null=True)),
                ('question_no', models.IntegerField(default=0)),
                ('answer', models.CharField(default='', max_length=300)),
                ('choice', models.CharField(default='', max_length=10)),
                ('long_answer', models.TextField(default='')),
                ('style', models.CharField(max_length=10)),
                ('point', models.IntegerField(default=1)),
                ('result', models.BooleanField(default=False)),
                ('result_point', models.IntegerField(default=0)),
                ('result_time', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mLessonResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.CharField(max_length=100)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('lesson_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('try_index', models.IntegerField(default=0)),
                ('wrong_count', models.IntegerField(default=0)),
                ('action_request', models.IntegerField(default=0)),
                ('repeat_count', models.TextField(blank=True, null=True)),
                ('question_results', models.TextField(blank=True, null=True)),
                ('question_answers', models.TextField(blank=True, null=True)),
                ('action_logs', models.TextField(blank=True, null=True)),
                ('total_time', models.IntegerField(default=0)),
                ('total_video_time', models.IntegerField(default=0)),
                ('part_video_time', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mStudyLogN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('subtype', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('order', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('properties', models.TextField(blank=True, null=True)),
                ('id_student', models.UUIDField(blank=True, null=True)),
                ('id_class', models.UUIDField(blank=True, null=True)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('id_content', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__mStudyLogN',
            },
        ),
        migrations.CreateModel(
            name='mStudyResultN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('subtype', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('order', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('progress', models.IntegerField(default=0)),
                ('point', models.IntegerField(default=0)),
                ('properties', models.TextField(blank=True, null=True)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('id_student', models.UUIDField(blank=True, null=True)),
                ('id_class', models.UUIDField(blank=True, null=True)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('id_content', models.UUIDField(blank=True, null=True)),
                ('id_base_course', models.UUIDField(blank=True, null=True)),
                ('id_ref_course', models.UUIDField(blank=True, null=True)),
                ('id_clinic_course', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__mStudyResultN',
            },
        ),
        migrations.CreateModel(
            name='mTestumFinalResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('testum_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('try_index', models.IntegerField(default=0)),
                ('wrong_count', models.IntegerField(default=0)),
                ('repeat_count', models.TextField(blank=True, null=True)),
                ('action_request', models.IntegerField(default=0)),
                ('question_results', models.TextField(blank=True, null=True)),
                ('question_answers', models.TextField(blank=True, null=True)),
                ('action_logs', models.TextField(blank=True, null=True)),
                ('total_time', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestumProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('testum_id', models.UUIDField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('point', models.IntegerField(default=0)),
                ('try_count', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestumQuestionResults',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('testum_result_id', models.UUIDField(blank=True, null=True)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('testum_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('question_id', models.UUIDField(blank=True, null=True)),
                ('question_no', models.IntegerField(default=0)),
                ('answer', models.CharField(default='', max_length=300)),
                ('choice', models.CharField(default='', max_length=10)),
                ('long_answer', models.TextField(default='')),
                ('style', models.CharField(max_length=10)),
                ('point', models.IntegerField(default=1)),
                ('result', models.BooleanField(default=False)),
                ('result_point', models.IntegerField(default=0)),
                ('result_time', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestumResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.UUIDField(blank=True, null=True)),
                ('class_id', models.UUIDField(blank=True, null=True)),
                ('course_id', models.UUIDField(blank=True, null=True)),
                ('testum_id', models.UUIDField(blank=True, null=True)),
                ('try_count', models.IntegerField(default=0)),
                ('try_index', models.IntegerField(default=0)),
                ('wrong_count', models.IntegerField(default=0)),
                ('repeat_count', models.TextField(blank=True, null=True)),
                ('action_request', models.IntegerField(default=0)),
                ('question_results', models.TextField(blank=True, null=True)),
                ('question_answers', models.TextField(blank=True, null=True)),
                ('action_logs', models.TextField(blank=True, null=True)),
                ('total_time', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
