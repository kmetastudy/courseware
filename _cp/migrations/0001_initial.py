# Generated by Django 4.1.5 on 2023-11-08 11:13

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='mBookExtraNXX',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id_book', models.UUIDField(blank=True, null=True)),
                ('thumb', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_subject', models.UUIDField(blank=True, null=True)),
                ('id_grade', models.UUIDField(blank=True, null=True)),
                ('id_language', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___cp_mBookExtraNXX',
            },
        ),
        migrations.CreateModel(
            name='mBookNXX',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('short_title', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.IntegerField(default=0)),
                ('free', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('level', models.IntegerField(default=0)),
                ('subject', models.IntegerField(default=0)),
                ('grade', models.IntegerField(default=0)),
                ('category', models.IntegerField(default=0)),
                ('sub_category', models.IntegerField(default=0)),
                ('language', models.IntegerField(default=0)),
                ('country', models.IntegerField(default=0)),
                ('publisher', models.IntegerField(default=0)),
                ('author', models.IntegerField(default=0)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('id_subject', models.UUIDField(blank=True, null=True)),
                ('id_grade', models.UUIDField(blank=True, null=True)),
                ('id_catergoy', models.UUIDField(blank=True, null=True)),
                ('id_sub_category', models.UUIDField(blank=True, null=True)),
                ('id_language', models.UUIDField(blank=True, null=True)),
                ('id_country', models.UUIDField(blank=True, null=True)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___cp_mBookNXX',
            },
        ),
        migrations.CreateModel(
            name='mComplex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('level', models.IntegerField(default=0)),
                ('id_parent', models.UUIDField(blank=True, null=True)),
                ('ids_child', models.TextField(blank=True, null=True)),
                ('num_child', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mComplexDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id_complex', models.UUIDField(blank=True, null=True)),
                ('thumb', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_root_complex', models.UUIDField(blank=True, null=True)),
                ('id_leaf_complex', models.UUIDField(blank=True, null=True)),
                ('id_subject', models.UUIDField(blank=True, null=True)),
                ('id_grade', models.UUIDField(blank=True, null=True)),
                ('id_language', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mContent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('id_parent', models.UUIDField(blank=True, null=True)),
                ('ids_child', models.TextField(blank=True, null=True)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mContentComplex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('level', models.IntegerField(default=0)),
                ('id_parent', models.UUIDField(blank=True, null=True)),
                ('ids_child', models.TextField(blank=True, null=True)),
                ('num_child', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mCourseBook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('branch_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('academy_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('code', models.TextField(blank=True, null=True)),
                ('depth', models.IntegerField(default=0)),
                ('content_num', models.IntegerField(default=0)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mCourseBookBranch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('branch_ids', models.TextField(blank=True, null=True)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0)),
                ('code', models.TextField(blank=True, null=True)),
                ('content_num', models.IntegerField(default=0)),
                ('fixed', models.BooleanField(default=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mCourseBookDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('academy_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('code', models.TextField(blank=True, null=True)),
                ('depth', models.IntegerField(default=0)),
                ('content_num', models.IntegerField(default=0)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mCourseExtraN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('thumb', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_subject', models.UUIDField(blank=True, null=True)),
                ('id_grade', models.UUIDField(blank=True, null=True)),
                ('id_language', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__cp_mCourseExtraN',
            },
        ),
        migrations.CreateModel(
            name='mCourseN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('short_title', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.IntegerField(default=0)),
                ('free', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('subject', models.IntegerField(default=0)),
                ('grade', models.IntegerField(default=0)),
                ('category', models.IntegerField(default=0)),
                ('sub_category', models.IntegerField(default=0)),
                ('language', models.IntegerField(default=0)),
                ('country', models.IntegerField(default=0)),
                ('publisher', models.IntegerField(default=0)),
                ('author', models.IntegerField(default=0)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('id_subject', models.UUIDField(blank=True, null=True)),
                ('id_grade', models.UUIDField(blank=True, null=True)),
                ('id_catergoy', models.UUIDField(blank=True, null=True)),
                ('id_sub_category', models.UUIDField(blank=True, null=True)),
                ('id_language', models.UUIDField(blank=True, null=True)),
                ('id_country', models.UUIDField(blank=True, null=True)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__cp_mCourseN',
            },
        ),
        migrations.CreateModel(
            name='mElement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('content', models.TextField(blank=True, null=True)),
                ('likes', models.IntegerField(default=0)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('sub_tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mElementN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('likes', models.IntegerField(default=0)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('sub_tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__cp_mElementN',
            },
        ),
        migrations.CreateModel(
            name='mElementNXX',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('likes', models.IntegerField(default=0)),
                ('id_publisher', models.UUIDField(blank=True, null=True)),
                ('id_author', models.UUIDField(blank=True, null=True)),
                ('id_langauge', models.UUIDField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('sub_tag', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___cp_mElementNXX',
            },
        ),
        migrations.CreateModel(
            name='mLesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('unit_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mLessonPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mLessonUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mMapper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('id_book', models.UUIDField(blank=True, null=True)),
                ('id_myself', models.UUIDField(blank=True, null=True)),
                ('id_root_complex', models.UUIDField(blank=True, null=True)),
                ('id_leaf_complex', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='mMapperN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('id_book', models.UUIDField(blank=True, null=True)),
                ('id_myself', models.UUIDField(blank=True, null=True)),
                ('id_root_complex', models.UUIDField(blank=True, null=True)),
                ('id_leaf_complex', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '__cp_mMapperN',
            },
        ),
        migrations.CreateModel(
            name='mMapperNXX',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(default=0)),
                ('sub_type', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('id_book', models.UUIDField(blank=True, null=True)),
                ('id_element', models.UUIDField(blank=True, null=True)),
                ('id_book_root', models.UUIDField(blank=True, null=True)),
                ('id_book_leaf', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'db_table': '___cp_mMapperNXX',
            },
        ),
        migrations.CreateModel(
            name='mQuestionAtom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('parent_ids', models.TextField(default='')),
                ('qcode_id', models.UUIDField(blank=True, null=True)),
                ('qb_id', models.UUIDField(blank=True, null=True)),
                ('choice_text_ids', models.TextField(blank=True, null=True)),
                ('solution_text_ids', models.TextField(blank=True, null=True)),
                ('solution_video_ids', models.TextField(blank=True, null=True)),
                ('solution_text', models.TextField(blank=True, null=True)),
                ('solution_video', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_id', models.UUIDField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('level', models.CharField(default='0', max_length=10)),
                ('style', models.CharField(default='0', max_length=10)),
                ('tag', models.TextField(default='')),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionBodyAtom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('tag', models.TextField(default='')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionBook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('branch_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('academy_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('code', models.TextField(blank=True, null=True)),
                ('depth', models.IntegerField(default=0)),
                ('content_num', models.IntegerField(default=0)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionBookBranch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('branch_ids', models.TextField(blank=True, null=True)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0)),
                ('code', models.TextField(blank=True, null=True)),
                ('content_num', models.IntegerField(default=0)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionBookDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_year', models.IntegerField(default=0)),
                ('category_grade', models.IntegerField(default=0)),
                ('category_publisher_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_year', models.IntegerField(default=0)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('origin_img', models.TextField(blank=True, null=True)),
                ('st_ids', models.TextField(blank=True, null=True)),
                ('sv_ids', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionKLMapper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_id', models.UUIDField(blank=True, null=True)),
                ('belong_kl_root_id', models.UUIDField(blank=True, null=True)),
                ('belong_kl_leaf_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionProto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_id', models.UUIDField(blank=True, null=True)),
                ('parameters', models.TextField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('category_year', models.IntegerField(default=0)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('twin_id', models.UUIDField(blank=True, null=True)),
                ('proto_id', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionSolutionText',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('q_id', models.UUIDField(blank=True, null=True)),
                ('content', models.TextField(default='')),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mQuestionSolutionVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(default='')),
                ('q_id', models.UUIDField(blank=True, null=True)),
                ('url', models.TextField(default='')),
                ('time', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mSolutionText',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(default='')),
                ('q_id', models.UUIDField(blank=True, null=True)),
                ('content', models.TextField(default='')),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestum',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('unit_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('twin', models.BooleanField(default=True)),
                ('twin_num', models.IntegerField(default=2)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestumPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mTestumUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('type', models.IntegerField(default=0)),
                ('title', models.TextField(blank=True, null=True)),
                ('content_ids', models.TextField(blank=True, null=True)),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('belongto', models.BooleanField(default=False)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mVideoAtom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_id', models.UUIDField(blank=True, null=True)),
                ('parent_ids', models.TextField(default='')),
                ('author_id', models.UUIDField(blank=True, null=True)),
                ('title', models.TextField(default='')),
                ('q_id', models.UUIDField(blank=True, null=True)),
                ('code', models.IntegerField(default=0)),
                ('url', models.TextField(default='')),
                ('v_id', models.TextField(default='')),
                ('time', models.TextField(default='')),
                ('belongto', models.BooleanField(default=False)),
                ('rss', models.TextField(blank=True, null=True)),
                ('description', models.TextField(default='')),
                ('tag', models.TextField(default='')),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mVideoKLMapper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_id', models.UUIDField(blank=True, null=True)),
                ('belong_kl_root_id', models.UUIDField(blank=True, null=True)),
                ('belong_kl_leaf_id', models.UUIDField(blank=True, null=True)),
                ('invalid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
