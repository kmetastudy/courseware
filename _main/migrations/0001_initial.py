# Generated by Django 4.1.5 on 2024-02-29 05:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('_cm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('user', models.TextField(blank=True, editable=False, null=True)),
                ('total_amount', models.PositiveIntegerField(verbose_name='결제금액')),
                ('status', models.CharField(choices=[('requested', '주문요청'), ('failed_payment', '결제실패'), ('paid', '결제완료'), ('cancelled', '주문취소')], db_index=True, default='requested', max_length=20, verbose_name='진행상태')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='1원 이상의 금액을 지정해주세요.')])),
                ('status', models.CharField(choices=[('ready', '미결제'), ('paid', '결제완료'), ('cancelled', '결제취소'), ('failed', '결제실패')], db_index=True, default='ready', max_length=9)),
                ('is_paid_ok', models.BooleanField(db_index=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PointCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.JSONField(default=dict, editable=False, verbose_name='포트원 결제내역')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='쇼핑몰 결제식별자')),
                ('name', models.CharField(max_length=200, verbose_name='결제명')),
                ('desired_amount', models.PositiveIntegerField(editable=False, verbose_name='결제금액')),
                ('buyer_name', models.CharField(editable=False, max_length=100, verbose_name='구매자 이름')),
                ('buyer_email', models.EmailField(editable=False, max_length=254, verbose_name='구매자 이메일')),
                ('pay_method', models.CharField(choices=[('card', '신용카드')], default='card', max_length=20, verbose_name='결제수단')),
                ('pay_status', models.CharField(choices=[('ready', '결제 준비'), ('paid', '결제 완료'), ('cancelled', '결제 취소'), ('failed', '결제 실패')], default='ready', max_length=20, verbose_name='결제상태')),
                ('is_paid_ok', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='결제성공 여부')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.UUIDField(editable=False)),
                ('points', models.PositiveIntegerField(default=0, verbose_name='보유포인트')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='결제명')),
                ('desired_amount', models.PositiveIntegerField(editable=False, verbose_name='결제금액')),
                ('buyer_name', models.CharField(editable=False, max_length=100, verbose_name='구매자 이름')),
                ('pay_method', models.CharField(choices=[('point', '포인트')], default='point', max_length=20, verbose_name='결제수단')),
                ('pay_status', models.CharField(choices=[('ready', '결제 준비'), ('paid', '결제 완료'), ('cancelled', '결제 취소'), ('failed', '결제 실패')], default='ready', max_length=20, verbose_name='결제상태')),
                ('is_paid_ok', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='결제성공 여부')),
                ('order', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='_main.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.JSONField(default=dict, editable=False, verbose_name='포트원 결제내역')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='쇼핑몰 결제식별자')),
                ('name', models.CharField(max_length=200, verbose_name='결제명')),
                ('desired_amount', models.PositiveIntegerField(editable=False, verbose_name='결제금액')),
                ('buyer_name', models.CharField(editable=False, max_length=100, verbose_name='구매자 이름')),
                ('buyer_email', models.EmailField(editable=False, max_length=254, verbose_name='구매자 이메일')),
                ('pay_method', models.CharField(choices=[('card', '신용카드')], default='card', max_length=20, verbose_name='결제수단')),
                ('pay_status', models.CharField(choices=[('ready', '결제 준비'), ('paid', '결제 완료'), ('cancelled', '결제 취소'), ('failed', '결제 실패')], default='ready', max_length=20, verbose_name='결제상태')),
                ('is_paid_ok', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='결제성공 여부')),
                ('order', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='_main.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='주문 시점의 상품명을 저장합니다.', max_length=100, verbose_name='상품명')),
                ('price', models.PositiveIntegerField(help_text='주문 시점의 상품가격을 저장합니다.', verbose_name='상품가격')),
                ('quantity', models.PositiveIntegerField(verbose_name='수량')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='_main.order')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='_cm.coursedetail')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='product_set',
            field=models.ManyToManyField(through='_main.OrderedProduct', to='_cm.coursedetail'),
        ),
        migrations.CreateModel(
            name='CartCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('course', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='_cm.coursedetail')),
            ],
        ),
    ]
