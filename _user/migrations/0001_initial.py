# Generated by Django 4.1.5 on 2024-02-29 05:11

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='mCoursePurchases',
            fields=[
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id_course', models.UUIDField(blank=True, null=True)),
                ('id_user', models.UUIDField(blank=True, null=True)),
                ('active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('purchase_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='mUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, max_length=256, null=True)),
                ('nickname', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.IntegerField(choices=[(0, 'Annonymous'), (1, 'Admin'), (2, 'Operator'), (4, 'Producer'), (8, 'Teacher'), (16, 'Student'), (32, 'Parent'), (64, 'User'), (128, 'Manager')], default=64)),
                ('grade', models.CharField(blank=True, max_length=16, null=True)),
                ('gender', models.CharField(blank=True, max_length=4, null=True)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
    ]
